{"version":3,"sources":["RenderTextToHTML.jsx","Comment.jsx","ArticleComments.jsx","Article.jsx","App.js","serviceWorker.js","index.js"],"names":["CommentText","props","htmlToRender","__html","text","react_default","a","createElement","dangerouslySetInnerHTML","style","Comment","children","data","setIsSpinning","_useState","useState","_useState2","Object","slicedToArray","isExpanded","setIsExpanded","handleExpand","useEffect","Fragment","map","comment","author","id","key","border","marginLeft","paddingLeft","paddingBottom","length","onClick","ArticleComments","objectID","commentData","setCommentData","_useState3","_useState4","loadError","setLoadError","loadComments","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","concat","sent","t0","console","error","stop","apply","this","arguments","message","Article","_props$data","title","url","points","created_at","num_comments","story_text","ageOfArticle","moment","utc","local","fromNow","className","margin","href","target","rel","fontSize","SPINNER_SIZE_PX","spinnerCSS","display","borderColor","position","top","left","marginTop","App","articles","setArticles","searchTerm","setSearchTerm","_useState5","_useState6","textInput","setTextInput","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","isSpinning","_useState11","_useState12","searchInputRef","useRef","handleSubmit","event","preventDefault","getArticles","articleList","hits","document","react_spinners","css","sizeUnit","size","color","loading","padding","textAlign","backgroundColor","borderRadius","marginBottom","onSubmit","type","autoComplete","value","onChange","ref","current","focus","boxShadow","article","Article_Article","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f262aaab.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function CommentText(props) {\n  const htmlToRender = { __html: props.text };\n  return <div dangerouslySetInnerHTML={htmlToRender} style={props.style} />;\n}\n","import React, { useState, useEffect } from \"react\";\nimport RenderTextToHTML from \"./RenderTextToHTML\";\n\n// explore HTML sanitization: https://developers.google.com/caja/\n\nexport default function Comment(props) {\n  const { children } = props.data;\n  const { setIsSpinning } = props;\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  function handleExpand() {\n    if (!isExpanded) {\n      setIsSpinning(true);\n    }\n    setIsExpanded(!isExpanded);\n  }\n\n  useEffect(() => {\n    setIsSpinning(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {children.map(comment => {\n        const { author, text, id } = comment;\n        return (\n          comment.author && (\n            <div\n              key={id}\n              style={{\n                border: \"1px dotted tan\",\n                marginLeft: 5,\n                paddingLeft: 5,\n                paddingBottom: 10\n              }}\n            >\n              <RenderTextToHTML text={text} />\n              by {author}\n              {comment.children.length > 0 ? (\n                <button style={{ marginLeft: 5 }} onClick={handleExpand}>\n                  {isExpanded ? \"-\" : \"+\"}\n                </button>\n              ) : null}\n              {isExpanded ? (\n                <Comment data={comment} setIsSpinning={setIsSpinning} />\n              ) : null}\n            </div>\n          )\n        );\n      })}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Comment from \"./Comment.jsx\";\n\nexport default function ArticleComments(props) {\n  const { objectID, setIsSpinning } = props;\n  const [commentData, setCommentData] = useState([]);\n  const [loadError, setLoadError] = useState(null);\n\n  const loadComments = async () => {\n    try {\n      const response = await axios.get(\n        `https://hn.algolia.com/api/v1/items/${objectID}`\n      );\n      setCommentData(response.data);\n      setIsSpinning(false);\n    } catch (err) {\n      console.error(err);\n      setIsSpinning(false);\n      setLoadError(err);\n    }\n  };\n\n  useEffect(() => {\n    setIsSpinning(true);\n    loadComments();\n    // axios\n    //   .get(`https://hn.algolia.com/api/v1/items/${objectID}`)\n    //   .then(response => {\n    //     setCommentData(response.data);\n    //     setIsSpinning(false);\n    //   })\n    //   .catch(err => {\n    //     console.error(err);\n    //   });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [objectID]);\n  return (\n    <>\n      {commentData &&\n        commentData.children &&\n        commentData.children.map(comment => {\n          return (\n            <Comment\n              key={comment.id}\n              data={commentData}\n              setIsSpinning={setIsSpinning}\n            />\n          );\n        })}\n      {loadError && <p>Error loading comments: {loadError.message}</p>}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport ArticleComments from \"./ArticleComments\";\nimport RenderTextToHTML from \"./RenderTextToHTML\";\nimport \"./Article.css\";\nimport moment from \"moment\";\n\nexport default function Article(props) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const {\n    title,\n    url,\n    author,\n    points,\n    created_at,\n    num_comments,\n    objectID,\n    story_text\n  } = props.data;\n\n  const timeOfArticlePost = moment.utc(\n    created_at,\n    \"YYYY-MM-DD[T]HH:mm:ss:[000]Z\"\n  );\n  // const hnTimeBugOffset = moment.duration(4, \"hours\");\n  // const temp = moment(timeOfArticlePost)\n  //   .subtract(hnTimeBugOffset)\n  // there seems to be a bug with time reporting for some stories, dunno why\n\n  const ageOfArticle = timeOfArticlePost\n    .utc()\n    .local()\n    .fromNow(); // 2017-11-07T16:24:04.000Z\n\n  return (\n    <div className=\"article\">\n      <h4 style={{ margin: 0 }}>\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {title}\n        </a>\n      </h4>\n      {story_text && (\n        <RenderTextToHTML text={story_text} style={{ fontSize: \"0.7rem\" }} />\n      )}\n      <h5 style={{ margin: 0 }}>\n        Submitted by {author} {ageOfArticle}, {points} points\n        <br />\n        Comments: {num_comments}\n        {num_comments > 0 && (\n          <button\n            onClick={() => setIsExpanded(!isExpanded)}\n            style={{ marginLeft: 10 }}\n          >\n            {isExpanded ? \"-\" : \"+\"}\n          </button>\n        )}\n        {isExpanded ? (\n          <ArticleComments\n            objectID={objectID}\n            setIsSpinning={props.setIsSpinning}\n          />\n        ) : null}\n      </h5>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Article from \"./Article\";\n// import { css } from \"@emotion/core\"; // for spinner\nimport { ClipLoader } from \"react-spinners\";\n// https://www.npmjs.com/package/react-spinners\n\nconst SPINNER_SIZE_PX = 50;\n// todo: how to handle stories missing a title or url? (example: search clockwork orange)\n// todo: add link to today's stories\n\nconst spinnerCSS = {\n  display: \"block\",\n  margin: \"0 auto\",\n  borderColor: \"red\",\n  position: \"fixed\",\n  top: \"50%\",\n  left: \"50%\",\n  marginTop: -(SPINNER_SIZE_PX / 2),\n  marginLeft: -(SPINNER_SIZE_PX / 2)\n};\n\nfunction App() {\n  const [articles, setArticles] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"react hooks\");\n  const [textInput, setTextInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSpinning, setIsSpinning] = useState(true);\n  const [loadError, setLoadError] = useState(null);\n  const searchInputRef = useRef();\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setSearchTerm(textInput);\n  }\n\n  function handleClear(event) {\n    setTextInput(\"\");\n    searchInputRef.current.focus();\n  }\n\n  const getArticles = async () => {\n    try {\n      const response = await axios.get(\n        `https://hn.algolia.com/api/v1/search?query=${searchTerm}`\n      );\n      const articleList = response.data.hits;\n      setArticles(articleList);\n      document.title = `HN ${searchTerm}`;\n      setIsLoading(false);\n      setIsSpinning(false);\n    } catch (err) {\n      setLoadError(err);\n      setIsSpinning(false);\n    }\n  };\n\n  useEffect(() => {\n    if (searchTerm) {\n      setIsLoading(true);\n      setIsSpinning(true);\n      getArticles(); // moved out of effect because I want to use an async function\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchTerm]);\n\n  return (\n    <>\n      {isSpinning && (\n        <div className=\"sweet-loading\">\n          <ClipLoader\n            css={spinnerCSS}\n            sizeUnit={\"px\"}\n            size={SPINNER_SIZE_PX}\n            color={\"blue\"}\n            loading={isSpinning}\n          />\n        </div>\n      )}\n      <div style={{ padding: 20 }}>\n        <h3\n          style={{\n            textAlign: \"center\",\n            backgroundColor: \"red\",\n            borderRadius: 3,\n            marginBottom: 2,\n            padding: 10\n          }}\n        >\n          Hacker News Search\n        </h3>\n        <h5 style={{ textAlign: \"center\", marginTop: 2 }}>by Scott Ratigan</h5>\n        <form onSubmit={handleSubmit}>\n          <input\n            style={{ margin: 10, borderRadius: 3 }}\n            type=\"text\"\n            autoComplete=\"off\"\n            value={textInput}\n            onChange={event => setTextInput(event.target.value)}\n            ref={searchInputRef}\n          />\n          <button onClick={handleSubmit}>Search</button>\n          <button\n            type=\"button\"\n            onClick={handleClear}\n            style={{ marginLeft: 10 }}\n          >\n            Clear\n          </button>\n        </form>\n        <h4>\n          {isLoading\n            ? \"Loading articles...\"\n            : `Displaying articles for ${searchTerm}`}\n        </h4>\n        <div\n          style={{\n            backgroundColor: \"#eadcdf\",\n            borderRadius: 5,\n            border: \"1px solid grey\",\n            boxShadow: \"5px 10px #888888\"\n          }}\n        >\n          {articles.map(article => {\n            return (\n              <Article\n                key={article.objectID}\n                data={article}\n                setIsSpinning={setIsSpinning}\n              />\n            );\n          })}\n          {loadError && <p>Error loading articles: {loadError.message}</p>}\n        </div>\n        <h6 style={{ textAlign: \"center\" }}>\n          Data supplied by{\" \"}\n          <a\n            href=\"https://news.ycombinator.com/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Hacker News\n          </a>\n        </h6>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// allow hot reloading:\nif (module.hot) {\n  module.hot.accept();\n}\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}